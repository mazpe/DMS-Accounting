/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package dms.panels;

import dms.util.AccountingUtil;
import java.awt.Dimension;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import javax.swing.JFrame;
import javax.swing.table.DefaultTableModel;
import java.util.Calendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JButton;
import javax.swing.JOptionPane;

/**
 *
 * @author Lester
 */
public class COAPanel extends javax.swing.JPanel {

	private static dms.panels.AccountsPayablePanel accountsPayablePanel;
	private static dms.panels.ToolsPanel toolsPanel;
        
        private static COAPanel instance = null;
        
        public static COAPanel getInstance(){
            if(instance == null){
                instance = new COAPanel();
            }
            
            return instance;
        }

	/**
	 * Creates new form COAPanel
	 */
	public COAPanel() {
		initComponents();

		//accountsPayablePanel = new dms.panels.AccountsPayablePanel();
                accountsPayablePanel = dms.panels.AccountsPayablePanel.getInstance();
		toolsPanel = dms.panels.ToolsPanel.getInstance();

		// Dates
		Calendar c = Calendar.getInstance();

		if (jDateChooser9.getDate() == null) {
			jDateChooser9.setDate(c.getTime());
		}
		if (jDateChooser7.getDate() == null) {
			c.add(Calendar.DATE, 1 - c.get(Calendar.DATE));
			jDateChooser7.setDate(c.getTime());
		}

		// Default methods
		AccountingUtil.dateFilter(jPanel153, jCheckBox8);
                // hide the series column                
		uICTable6.getColumnModel().getColumn(4).setMinWidth(0);
		uICTable6.getColumnModel().getColumn(4).setMaxWidth(0);
		uICTable6.getColumnModel().getColumn(4).setWidth(0);                
                                
	}

	/**
	 * This method is called from within the constructor to initialize the
	 * form. WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        coaPopup = new javax.swing.JDialog(mainFrame,true);
        jPanel97 = new javax.swing.JPanel();
        jPanel99 = new javax.swing.JPanel();
        coaPopupOkButton = new javax.swing.JButton();
        coaPopupCancelButton = new javax.swing.JButton();
        jPanel100 = new javax.swing.JPanel();
        jPanel101 = new javax.swing.JPanel();
        filler9 = new javax.swing.Box.Filler(new java.awt.Dimension(15, 15), new java.awt.Dimension(15, 15), new java.awt.Dimension(32767, 15));
        jPanel102 = new javax.swing.JPanel();
        filler5 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(32767, 32767));
        jLabel101 = new javax.swing.JLabel();
        jLabel107 = new javax.swing.JLabel();
        jLabel110 = new javax.swing.JLabel();
        jLabel111 = new javax.swing.JLabel();
        jLabel112 = new javax.swing.JLabel();
        jPanel107 = new javax.swing.JPanel();
        filler6 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(32767, 32767));
        coaAccountField = new javax.swing.JFormattedTextField();
        jTextField2 = new javax.swing.JTextField();
        coaTypeField = new javax.swing.JComboBox();
        isControlled = new javax.swing.JCheckBox();
        series = new javax.swing.JTextField();
        filler7 = new javax.swing.Box.Filler(new java.awt.Dimension(15, 15), new java.awt.Dimension(15, 15), new java.awt.Dimension(32767, 15));
        jPanel65 = new javax.swing.JPanel();
        jPanel70 = new javax.swing.JPanel();
        jPanel103 = new javax.swing.JPanel();
        jButton11 = new javax.swing.JButton();
        jButton12 = new javax.swing.JButton();
        jButton13 = new javax.swing.JButton();
        jButton14 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        uICTable6 = new uic.widgets.UICTable();
        jPanel71 = new javax.swing.JPanel();
        jScrollPane21 = new javax.swing.JScrollPane();
        jTable5 = new javax.swing.JTable();
        jPanel95 = new javax.swing.JPanel();
        jCheckBox8 = new javax.swing.JCheckBox();
        jPanel153 = new javax.swing.JPanel();
        jLabel86 = new javax.swing.JLabel();
        jDateChooser7 = new com.toedter.calendar.JDateChooser();
        jLabel105 = new javax.swing.JLabel();
        jDateChooser9 = new com.toedter.calendar.JDateChooser();
        jButton22 = new javax.swing.JButton();
        journalSearchTextField3 = new javax.swing.JTextField();
        journalSearchButton3 = new javax.swing.JButton();

        coaPopup.setPreferredSize(coaPopupSize);
        coaPopup.setSize(coaPopupSize);
        coaPopup.setMaximumSize(coaPopupSize);
        coaPopup.setMinimumSize(coaPopupSize);
        coaPopup.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(dms.DMSApp.class).getContext().getResourceMap(COAPanel.class);
        coaPopup.setTitle(resourceMap.getString("coaPopup.title")); // NOI18N
        coaPopup.setLocationByPlatform(true);
        coaPopup.setMinimumSize(new java.awt.Dimension(610, 180));
        coaPopup.setModal(true);
        coaPopup.setName("coaPopup"); // NOI18N
        coaPopup.setResizable(false);
        coaPopup.getContentPane().setLayout(new java.awt.GridLayout(1, 0));

        jPanel97.setBackground(resourceMap.getColor("jPanel97.background")); // NOI18N
        jPanel97.setName("jPanel97"); // NOI18N
        jPanel97.setLayout(new java.awt.BorderLayout());

        jPanel99.setBackground(resourceMap.getColor("jPanel99.background")); // NOI18N
        jPanel99.setName("jPanel99"); // NOI18N
        jPanel99.setLayout(new javax.swing.BoxLayout(jPanel99, javax.swing.BoxLayout.Y_AXIS));

        coaPopupOkButton.setFont(resourceMap.getFont("coaPopupOkButton.font")); // NOI18N
        coaPopupOkButton.setText(resourceMap.getString("coaPopupOkButton.text")); // NOI18N
        coaPopupOkButton.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        coaPopupOkButton.setMargin(new java.awt.Insets(2, 2, 2, 2));
        coaPopupOkButton.setMaximumSize(new java.awt.Dimension(100, 30));
        coaPopupOkButton.setMinimumSize(new java.awt.Dimension(100, 30));
        coaPopupOkButton.setName("coaPopupOkButton"); // NOI18N
        coaPopupOkButton.setOpaque(false);
        coaPopupOkButton.setPreferredSize(new java.awt.Dimension(100, 30));
        coaPopupOkButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                coaPopupOkButtoncoaPopupButtonsClicked(evt);
            }
        });
        jPanel99.add(coaPopupOkButton);

        coaPopupCancelButton.setFont(resourceMap.getFont("coaPopupCancelButton.font")); // NOI18N
        coaPopupCancelButton.setText(resourceMap.getString("coaPopupCancelButton.text")); // NOI18N
        coaPopupCancelButton.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        coaPopupCancelButton.setMargin(new java.awt.Insets(2, 2, 2, 2));
        coaPopupCancelButton.setMaximumSize(new java.awt.Dimension(100, 30));
        coaPopupCancelButton.setMinimumSize(new java.awt.Dimension(100, 30));
        coaPopupCancelButton.setName("coaPopupCancelButton"); // NOI18N
        coaPopupCancelButton.setOpaque(false);
        coaPopupCancelButton.setPreferredSize(new java.awt.Dimension(100, 30));
        coaPopupCancelButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                coaPopupCancelButtoncoaPopupButtonsClicked(evt);
            }
        });
        jPanel99.add(coaPopupCancelButton);

        jPanel97.add(jPanel99, java.awt.BorderLayout.WEST);

        jPanel100.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jPanel100.setName("jPanel100"); // NOI18N
        jPanel100.setOpaque(false);
        jPanel100.setLayout(new java.awt.GridLayout(0, 1));

        jPanel101.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, resourceMap.getFont("jPanel101.border.titleFont"), resourceMap.getColor("jPanel101.border.titleColor"))); // NOI18N
        jPanel101.setName("jPanel101"); // NOI18N
        jPanel101.setOpaque(false);
        jPanel101.setLayout(new javax.swing.BoxLayout(jPanel101, javax.swing.BoxLayout.X_AXIS));

        filler9.setName("filler9"); // NOI18N
        jPanel101.add(filler9);

        jPanel102.setName("jPanel102"); // NOI18N
        jPanel102.setOpaque(false);
        jPanel102.setLayout(new java.awt.GridLayout(6, 1, 0, 6));

        filler5.setName("filler5"); // NOI18N
        jPanel102.add(filler5);

        jLabel101.setFont(resourceMap.getFont("jLabel101.font")); // NOI18N
        jLabel101.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel101.setText(resourceMap.getString("jLabel101.text")); // NOI18N
        jLabel101.setName("jLabel101"); // NOI18N
        jPanel102.add(jLabel101);

        jLabel107.setFont(resourceMap.getFont("jLabel107.font")); // NOI18N
        jLabel107.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel107.setText(resourceMap.getString("jLabel107.text")); // NOI18N
        jLabel107.setName("jLabel107"); // NOI18N
        jPanel102.add(jLabel107);

        jLabel110.setFont(resourceMap.getFont("jLabel110.font")); // NOI18N
        jLabel110.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel110.setText(resourceMap.getString("jLabel110.text")); // NOI18N
        jLabel110.setName("jLabel110"); // NOI18N
        jPanel102.add(jLabel110);

        jLabel111.setFont(resourceMap.getFont("jLabel111.font")); // NOI18N
        jLabel111.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel111.setText(resourceMap.getString("jLabel111.text")); // NOI18N
        jLabel111.setName("jLabel111"); // NOI18N
        jPanel102.add(jLabel111);

        jLabel112.setFont(resourceMap.getFont("jLabel112.font")); // NOI18N
        jLabel112.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel112.setText(resourceMap.getString("jLabel112.text")); // NOI18N
        jLabel112.setName("jLabel112"); // NOI18N
        jPanel102.add(jLabel112);

        jPanel101.add(jPanel102);

        jPanel107.setMinimumSize(new java.awt.Dimension(114, 160));
        jPanel107.setName("jPanel107"); // NOI18N
        jPanel107.setOpaque(false);
        jPanel107.setPreferredSize(new java.awt.Dimension(1106, 160));
        jPanel107.setLayout(new java.awt.GridLayout(6, 1, 0, 6));

        filler6.setName("filler6"); // NOI18N
        jPanel107.add(filler6);

        coaAccountField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));
        coaAccountField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        coaAccountField.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        coaAccountField.setName("coaAccountField"); // NOI18N
        coaAccountField.setValue(0.00);
        jPanel107.add(coaAccountField);

        jTextField2.setColumns(100);
        jTextField2.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jTextField2.setName("jTextField2"); // NOI18N
        jTextField2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField2coaPopupDescTyped(evt);
            }
        });
        jPanel107.add(jTextField2);

        coaTypeField.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Bank", "Cash", "Accounts Receivable", "Other Current Asset", "Fixed Asset", "Other Asset", "Accounts Payable", "Other Current Liability", "Long Term Liability", "Equity", "Income", "Cost of Goods Sold", "Expense", "Other Income" }));
        coaTypeField.setMinimumSize(new java.awt.Dimension(114, 30));
        coaTypeField.setName("coaTypeField"); // NOI18N
        coaTypeField.setPreferredSize(new java.awt.Dimension(114, 30));
        jPanel107.add(coaTypeField);

        isControlled.setText(resourceMap.getString("isControlled.text")); // NOI18N
        isControlled.setName("isControlled"); // NOI18N
        isControlled.setOpaque(false);
        jPanel107.add(isControlled);

        series.setColumns(100);
        series.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        series.setName("series"); // NOI18N
        series.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                seriescoaPopupDescTyped(evt);
            }
        });
        jPanel107.add(series);

        jPanel101.add(jPanel107);

        filler7.setName("filler7"); // NOI18N
        jPanel101.add(filler7);

        jPanel100.add(jPanel101);

        jPanel97.add(jPanel100, java.awt.BorderLayout.CENTER);

        coaPopup.getContentPane().add(jPanel97);

        setName("Form"); // NOI18N
        setLayout(new javax.swing.BoxLayout(this, javax.swing.BoxLayout.LINE_AXIS));

        jPanel65.setBackground(resourceMap.getColor("jPanel65.background")); // NOI18N
        jPanel65.setName("jPanel65"); // NOI18N
        jPanel65.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                jPanel65COAVisible(evt);
            }
        });
        jPanel65.setLayout(new java.awt.BorderLayout());

        jPanel70.setBorder(javax.swing.BorderFactory.createTitledBorder(resourceMap.getString("jPanel70.border.title"))); // NOI18N
        jPanel70.setMaximumSize(new java.awt.Dimension(450, 2147483647));
        jPanel70.setMinimumSize(new java.awt.Dimension(450, 600));
        jPanel70.setName("jPanel70"); // NOI18N
        jPanel70.setOpaque(false);
        jPanel70.setPreferredSize(new java.awt.Dimension(450, 600));
        jPanel70.setLayout(new java.awt.BorderLayout());

        jPanel103.setName("jPanel103"); // NOI18N
        jPanel103.setOpaque(false);
        jPanel103.setLayout(new java.awt.GridLayout(1, 0));

        jButton11.setText(resourceMap.getString("jButton11.text")); // NOI18N
        jButton11.setName("jButton11"); // NOI18N
        jButton11.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton11coaEditButtonsClicked(evt);
            }
        });
        jPanel103.add(jButton11);

        jButton12.setText(resourceMap.getString("jButton12.text")); // NOI18N
        jButton12.setName("jButton12"); // NOI18N
        jButton12.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton12coaEditButtonsClicked(evt);
            }
        });
        jPanel103.add(jButton12);

        jButton13.setText(resourceMap.getString("jButton13.text")); // NOI18N
        jButton13.setName("jButton13"); // NOI18N
        jButton13.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton13coaEditButtonsClicked(evt);
            }
        });
        jPanel103.add(jButton13);

        jButton14.setText(resourceMap.getString("jButton14.text")); // NOI18N
        jButton14.setName("jButton14"); // NOI18N
        jButton14.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton14coaEditButtonsClicked(evt);
            }
        });
        jPanel103.add(jButton14);

        jPanel70.add(jPanel103, java.awt.BorderLayout.NORTH);

        jPanel2.setName("jPanel2"); // NOI18N
        jPanel2.setLayout(new javax.swing.BoxLayout(jPanel2, javax.swing.BoxLayout.LINE_AXIS));

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        uICTable6.setAutoCreateRowSorter(true);
        uICTable6.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Account", "Description", "Type", "C", "Series", "Balance"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        uICTable6.setFillsViewportHeight(true);
        uICTable6.setMaximumSize(new java.awt.Dimension(2147483647, 16));
        uICTable6.setMinimumSize(new java.awt.Dimension(350, 16));
        uICTable6.setName("uICTable6"); // NOI18N
        uICTable6.setPreferredScrollableViewportSize(new java.awt.Dimension(0, 0));
        uICTable6.setPreferredSize(new java.awt.Dimension(0, 0));
        uICTable6.getTableHeader().setReorderingAllowed(false);
        uICTable6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                uICTable6chartOfAccountsClicked(evt);
            }
        });
        uICTable6.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                uICTable6chartOfAccountsKeyed(evt);
            }
        });
        jScrollPane1.setViewportView(uICTable6);
        uICTable6.getColumnModel().getColumn(0).setMinWidth(40);
        uICTable6.getColumnModel().getColumn(0).setPreferredWidth(40);
        uICTable6.getColumnModel().getColumn(0).setMaxWidth(40);
        uICTable6.getColumnModel().getColumn(0).setHeaderValue(resourceMap.getString("uICTable6.columnModel.title0")); // NOI18N
        uICTable6.getColumnModel().getColumn(1).setMinWidth(175);
        uICTable6.getColumnModel().getColumn(1).setPreferredWidth(175);
        uICTable6.getColumnModel().getColumn(1).setMaxWidth(175);
        uICTable6.getColumnModel().getColumn(1).setHeaderValue(resourceMap.getString("uICTable6.columnModel.title1")); // NOI18N
        uICTable6.getColumnModel().getColumn(2).setMinWidth(125);
        uICTable6.getColumnModel().getColumn(2).setPreferredWidth(125);
        uICTable6.getColumnModel().getColumn(2).setMaxWidth(125);
        uICTable6.getColumnModel().getColumn(2).setHeaderValue(resourceMap.getString("uICTable6.columnModel.title2")); // NOI18N
        uICTable6.getColumnModel().getColumn(3).setMinWidth(0);
        uICTable6.getColumnModel().getColumn(3).setPreferredWidth(0);
        uICTable6.getColumnModel().getColumn(3).setMaxWidth(0);
        uICTable6.getColumnModel().getColumn(3).setHeaderValue(resourceMap.getString("uICTable6.columnModel.title3")); // NOI18N
        uICTable6.getColumnModel().getColumn(4).setMinWidth(10);
        uICTable6.getColumnModel().getColumn(4).setPreferredWidth(10);
        uICTable6.getColumnModel().getColumn(4).setMaxWidth(10);
        uICTable6.getColumnModel().getColumn(4).setHeaderValue(resourceMap.getString("uICTable6.columnModel.title5")); // NOI18N
        uICTable6.getColumnModel().getColumn(5).setMinWidth(100);
        uICTable6.getColumnModel().getColumn(5).setPreferredWidth(100);
        uICTable6.getColumnModel().getColumn(5).setMaxWidth(100);
        uICTable6.getColumnModel().getColumn(5).setHeaderValue(resourceMap.getString("uICTable6.columnModel.title4")); // NOI18N

        jPanel2.add(jScrollPane1);

        jPanel70.add(jPanel2, java.awt.BorderLayout.CENTER);

        jPanel65.add(jPanel70, java.awt.BorderLayout.WEST);

        jPanel71.setBorder(javax.swing.BorderFactory.createTitledBorder(resourceMap.getString("jPanel71.border.title"))); // NOI18N
        jPanel71.setName("jPanel71"); // NOI18N
        jPanel71.setOpaque(false);
        jPanel71.setLayout(new java.awt.BorderLayout(0, 10));

        jScrollPane21.setName("jScrollPane21"); // NOI18N

        jTable5.setAutoCreateRowSorter(true);
        jTable5.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Account", "Debits", "Credits", "Control", "Reference", "Post Date", "GL Type", "Memo"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable5.setFillsViewportHeight(true);
        jTable5.setName("jTable5"); // NOI18N
        jTable5.getTableHeader().setReorderingAllowed(false);
        jScrollPane21.setViewportView(jTable5);
        jTable5.getColumnModel().getColumn(0).setMinWidth(200);
        jTable5.getColumnModel().getColumn(0).setPreferredWidth(200);
        jTable5.getColumnModel().getColumn(0).setMaxWidth(200);
        jTable5.getColumnModel().getColumn(0).setHeaderValue(resourceMap.getString("jTable5.columnModel.title0")); // NOI18N
        jTable5.getColumnModel().getColumn(1).setMinWidth(75);
        jTable5.getColumnModel().getColumn(1).setPreferredWidth(75);
        jTable5.getColumnModel().getColumn(1).setMaxWidth(75);
        jTable5.getColumnModel().getColumn(1).setHeaderValue(resourceMap.getString("jTable5.columnModel.title1")); // NOI18N
        jTable5.getColumnModel().getColumn(2).setMinWidth(75);
        jTable5.getColumnModel().getColumn(2).setPreferredWidth(75);
        jTable5.getColumnModel().getColumn(2).setMaxWidth(75);
        jTable5.getColumnModel().getColumn(2).setHeaderValue(resourceMap.getString("jTable5.columnModel.title2")); // NOI18N
        jTable5.getColumnModel().getColumn(3).setMinWidth(80);
        jTable5.getColumnModel().getColumn(3).setPreferredWidth(80);
        jTable5.getColumnModel().getColumn(3).setMaxWidth(80);
        jTable5.getColumnModel().getColumn(3).setHeaderValue(resourceMap.getString("jTable5.columnModel.title3")); // NOI18N
        jTable5.getColumnModel().getColumn(4).setMinWidth(60);
        jTable5.getColumnModel().getColumn(4).setPreferredWidth(60);
        jTable5.getColumnModel().getColumn(4).setMaxWidth(60);
        jTable5.getColumnModel().getColumn(4).setHeaderValue(resourceMap.getString("jTable5.columnModel.title4")); // NOI18N
        jTable5.getColumnModel().getColumn(5).setMinWidth(75);
        jTable5.getColumnModel().getColumn(5).setPreferredWidth(75);
        jTable5.getColumnModel().getColumn(5).setMaxWidth(75);
        jTable5.getColumnModel().getColumn(5).setHeaderValue(resourceMap.getString("jTable5.columnModel.title5")); // NOI18N
        jTable5.getColumnModel().getColumn(6).setMinWidth(200);
        jTable5.getColumnModel().getColumn(6).setPreferredWidth(200);
        jTable5.getColumnModel().getColumn(6).setMaxWidth(200);
        jTable5.getColumnModel().getColumn(6).setHeaderValue(resourceMap.getString("jTable5.columnModel.title7")); // NOI18N
        jTable5.getColumnModel().getColumn(7).setMinWidth(200);
        jTable5.getColumnModel().getColumn(7).setPreferredWidth(200);
        jTable5.getColumnModel().getColumn(7).setMaxWidth(500);
        jTable5.getColumnModel().getColumn(7).setHeaderValue(resourceMap.getString("jTable5.columnModel.title6")); // NOI18N

        jPanel71.add(jScrollPane21, java.awt.BorderLayout.CENTER);

        jPanel95.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jPanel95.setName("jPanel95"); // NOI18N
        jPanel95.setOpaque(false);
        jPanel95.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jCheckBox8.setSelected(true);
        jCheckBox8.setText(resourceMap.getString("jCheckBox8.text")); // NOI18N
        jCheckBox8.setName("jCheckBox8"); // NOI18N
        jCheckBox8.setOpaque(false);
        jCheckBox8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jCheckBox8MouseClicked(evt);
            }
        });
        jPanel95.add(jCheckBox8);

        jPanel153.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jPanel153.setName("jPanel153"); // NOI18N
        jPanel153.setOpaque(false);

        jLabel86.setText(resourceMap.getString("jLabel86.text")); // NOI18N
        jLabel86.setName("jLabel86"); // NOI18N
        jPanel153.add(jLabel86);

        jDateChooser7.setDateFormatString(resourceMap.getString("jDateChooser7.dateFormatString")); // NOI18N
        jDateChooser7.setName("jDateChooser7"); // NOI18N
        jPanel153.add(jDateChooser7);

        jLabel105.setText(resourceMap.getString("jLabel105.text")); // NOI18N
        jLabel105.setName("jLabel105"); // NOI18N
        jPanel153.add(jLabel105);

        jDateChooser9.setDateFormatString(resourceMap.getString("jDateChooser9.dateFormatString")); // NOI18N
        jDateChooser9.setName("jDateChooser9"); // NOI18N
        jPanel153.add(jDateChooser9);

        jButton22.setText(resourceMap.getString("jButton22.text")); // NOI18N
        jButton22.setName("jButton22"); // NOI18N
        jButton22.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton22chartOfAccountsClicked(evt);
            }
        });
        jPanel153.add(jButton22);

        jPanel95.add(jPanel153);

        journalSearchTextField3.setMaximumSize(new java.awt.Dimension(100, 20));
        journalSearchTextField3.setMinimumSize(new java.awt.Dimension(100, 20));
        journalSearchTextField3.setName("journalSearchTextField3"); // NOI18N
        journalSearchTextField3.setPreferredSize(new java.awt.Dimension(100, 20));
        journalSearchTextField3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                journalSearchTextField3KeyReleased(evt);
            }
        });
        jPanel95.add(journalSearchTextField3);

        journalSearchButton3.setText(resourceMap.getString("journalSearchButton3.text")); // NOI18N
        journalSearchButton3.setName("journalSearchButton3"); // NOI18N
        journalSearchButton3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                journalSearchButton3MouseClicked(evt);
            }
        });
        jPanel95.add(journalSearchButton3);

        jPanel71.add(jPanel95, java.awt.BorderLayout.NORTH);

        jPanel65.add(jPanel71, java.awt.BorderLayout.CENTER);

        add(jPanel65);
    }// </editor-fold>//GEN-END:initComponents

        private void jButton11coaEditButtonsClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton11coaEditButtonsClicked
		if (evt.getClickCount() >= 1) {
			if ((JButton) evt.getSource() == jButton11) {
				coaAccountField.setValue(0);
				jTextField2.setText("");
				coaTypeField.setSelectedItem("Asset");
				coaModal = 1;
				coaPopup.setLocationRelativeTo(this);
				dms.DMSApp.getApplication().show(coaPopup);
			} else if ((JButton) evt.getSource() == jButton12 && uICTable6.getSelectedRowCount() == 1) {
				coaAccountField.setValue(Integer.parseInt("" + uICTable6.getValueAt(uICTable6.getSelectedRow(), uICTable6.getColumnModel().getColumnIndex("Account"))));
				jTextField2.setText("" + uICTable6.getValueAt(uICTable6.getSelectedRow(), uICTable6.getColumnModel().getColumnIndex("Description")));
				coaTypeField.setSelectedItem(uICTable6.getValueAt(uICTable6.getSelectedRow(), uICTable6.getColumnModel().getColumnIndex("Type")));
				coaModal = 2;
				coaPopup.setLocationRelativeTo(this);
				dms.DMSApp.getApplication().show(coaPopup);
			} else if ((JButton) evt.getSource() == jButton13 && uICTable6.getSelectedRowCount() == 1) {
				AccountingUtil.deleteAccount(Integer.parseInt("" + uICTable6.getValueAt(uICTable6.getSelectedRow(), uICTable6.getColumnModel().getColumnIndex("Account"))), this);
				reloadCOA2();
			}
		}
        }//GEN-LAST:event_jButton11coaEditButtonsClicked

        private void jButton12coaEditButtonsClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton12coaEditButtonsClicked
		if (evt.getClickCount() >= 1) {
			if ((JButton) evt.getSource() == jButton11) {
				coaAccountField.setValue(0);
				jTextField2.setText("");
				coaTypeField.setSelectedItem("Asset");
				coaModal = 1;
				coaPopup.setLocationRelativeTo(this);
				dms.DMSApp.getApplication().show(coaPopup);
			} else if ((JButton) evt.getSource() == jButton12) {
                                if(uICTable6.getSelectedRowCount() == 0){
                                    dms.DMSApp.displayMessage(uICTable6, "Please select a record to edit", JOptionPane.ERROR_MESSAGE);
                                    return;
                                }else if(uICTable6.getSelectedRowCount() == 1){
                                    coaAccountField.setValue(Integer.parseInt("" + uICTable6.getValueAt(uICTable6.getSelectedRow(), uICTable6.getColumnModel().getColumnIndex("Account"))));
                                    jTextField2.setText("" + uICTable6.getValueAt(uICTable6.getSelectedRow(), uICTable6.getColumnModel().getColumnIndex("Description")));
                                    coaTypeField.setSelectedItem(uICTable6.getValueAt(uICTable6.getSelectedRow(), uICTable6.getColumnModel().getColumnIndex("Type")));

                                    //System.out.print("string " + uICTable6.getValueAt(uICTable6.getSelectedRow(), uICTable6.getColumnModel().getColumnIndex("C")).toString());

                                    if (uICTable6.getValueAt(uICTable6.getSelectedRow(), uICTable6.getColumnModel().getColumnIndex("C")).toString().equals("true")) {

                                            isControlled.setSelected(true);

                                    } else {
                                            isControlled.setSelected(false);
                                    }

				series.setText("" + uICTable6.getValueAt(uICTable6.getSelectedRow(), uICTable6.getColumnModel().getColumnIndex("Series")));
                                    coaModal = 2;
                                    coaPopup.setLocationRelativeTo(this);
                                    dms.DMSApp.getApplication().show(coaPopup);
                                }
			} else if ((JButton) evt.getSource() == jButton13) {                                
                                if(uICTable6.getSelectedRowCount() == 0){                                    
                                    dms.DMSApp.displayMessage(uICTable6, "Please select a record to delete", JOptionPane.ERROR_MESSAGE);
                                    return;
                                }else if(uICTable6.getSelectedRowCount() == 1){                                    
                                    AccountingUtil.deleteAccount(Integer.parseInt("" + uICTable6.getValueAt(uICTable6.getSelectedRow(), uICTable6.getColumnModel().getColumnIndex("Account"))), this);
                                    reloadCOA2();
                                }
			}
		}
        }//GEN-LAST:event_jButton12coaEditButtonsClicked

        private void jButton13coaEditButtonsClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton13coaEditButtonsClicked
		if (evt.getClickCount() >= 1) {
			if ((JButton) evt.getSource() == jButton11) {
				coaAccountField.setValue(0);
				jTextField2.setText("");
				coaTypeField.setSelectedItem("Asset");
				coaModal = 1;
				coaPopup.setLocationRelativeTo(this);
				dms.DMSApp.getApplication().show(coaPopup);
			} else if ((JButton) evt.getSource() == jButton12 && uICTable6.getSelectedRowCount() == 1) {
				coaAccountField.setValue(Integer.parseInt("" + uICTable6.getValueAt(uICTable6.getSelectedRow(), uICTable6.getColumnModel().getColumnIndex("Account"))));
				jTextField2.setText("" + uICTable6.getValueAt(uICTable6.getSelectedRow(), uICTable6.getColumnModel().getColumnIndex("Description")));
				coaTypeField.setSelectedItem(uICTable6.getValueAt(uICTable6.getSelectedRow(), uICTable6.getColumnModel().getColumnIndex("Type")));
				coaModal = 2;
				coaPopup.setLocationRelativeTo(this);
				dms.DMSApp.getApplication().show(coaPopup);
			} else if ((JButton) evt.getSource() == jButton13 && uICTable6.getSelectedRowCount() == 1) {
				AccountingUtil.deleteAccount(Integer.parseInt("" + uICTable6.getValueAt(uICTable6.getSelectedRow(), uICTable6.getColumnModel().getColumnIndex("Account"))), this);
				reloadCOA2();
			}
		}
        }//GEN-LAST:event_jButton13coaEditButtonsClicked

        private void uICTable6chartOfAccountsClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_uICTable6chartOfAccountsClicked
		if (uICTable6.getSelectedRowCount() == 1) {

			String postDateFilter = "";
			if (!jCheckBox8.isSelected()) {
				postDateFilter = "AND PostDate Between '" + AccountingUtil.dateFormat.format(jDateChooser7.getDate()) + "' AND '" + AccountingUtil.dateFormat.format(jDateChooser9.getDate()) + "' ";
			}

			try {

				String sql = "SELECT "
					+ "CAST(A.AccountNumber AS VARCHAR) +' - '+ B.Description,CAST(ROUND(Debit,2) AS NUMERIC(10,2)),CAST(ROUND(Credit,2) AS NUMERIC(10,2)),ControlNumber,ReferenceNumber,PostDate, GLType, Memo"
					+ " FROM AccountingGLTable A "
					+ " LEFT JOIN AccountingCOATable B "
					+ " ON (A.AccountNumber = B.AccountNumber) "
					+ "WHERE A.AccountNumber = '" + uICTable6.getValueAt(uICTable6.getSelectedRow(), uICTable6.getColumnModel().getColumnIndex("Account")) + "' "
					+ postDateFilter
					+ "AND A.LotName = '" + dms.DMSApp.getApplication().getCurrentlotName() + "' "
					+ "ORDER BY PostDate DESC";

				//System.out.println("clicked sql " + sql);

				ResultSet rs = dms.DMSApp.getApplication().getDBConnection().getResultSet(sql);

				DefaultTableModel aModel = (DefaultTableModel) jTable5.getModel();
				AccountingUtil.clearTableModel(aModel);
				/*
				 if (aModel.getRowCount() > 0) {
				 for (int i = aModel.getRowCount(); i > 0; i--) {
				 aModel.removeRow(i - 1);
				 }
				 }
				 */
				ResultSetMetaData rsmd = rs.getMetaData();
				int colNo = rsmd.getColumnCount();
				while (rs.next()) {
					Object[] values = new Object[colNo];
					for (int i = 0; i < colNo; i++) {
						if (i == 1 || i == 2) {
							values[i] = AccountingUtil.formatAmountForDisplay(rs.getObject(i + 1).toString());
						} else if (i == 5) {
							values[i] = AccountingUtil.dateFormat1.format(rs.getObject(i + 1));
						} else {
							values[i] = rs.getObject(i + 1);
						}
					}
					aModel.addRow(values);
				}
				rs.getStatement().close();
			} catch (Exception e) {
				dms.DMSApp.displayMessage(this, e.getLocalizedMessage(), dms.DMSApp.ERROR_MESSAGE);
			}
		}
        }//GEN-LAST:event_uICTable6chartOfAccountsClicked

        private void uICTable6chartOfAccountsKeyed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_uICTable6chartOfAccountsKeyed
		uICTable6chartOfAccountsClicked(null);
        }//GEN-LAST:event_uICTable6chartOfAccountsKeyed

        private void jButton22chartOfAccountsClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton22chartOfAccountsClicked
		if (uICTable6.getSelectedRowCount() == 1) {

			String postDateFilter = "";
			if (!jCheckBox8.isSelected()) {
				postDateFilter = "AND PostDate Between '" + AccountingUtil.dateFormat.format(jDateChooser7.getDate()) + "' AND '" + AccountingUtil.dateFormat.format(jDateChooser9.getDate()) + "' ";
			}

			try {

				String sql = "SELECT "
					+ "AccountNumber,CAST(ROUND(Debit,2) AS NUMERIC(10,2)),CAST(ROUND(Credit,2) AS NUMERIC(10,2)),ControlNumber,ReferenceNumber,PostDate FROM AccountingGLTable "
					+ "WHERE AccountNumber = '" + uICTable6.getValueAt(uICTable6.getSelectedRow(), uICTable6.getColumnModel().getColumnIndex("Account")) + "' "
					+ postDateFilter
					+ "AND LotName = '" + dms.DMSApp.getApplication().getCurrentlotName() + "' "
					+ "ORDER BY PostDate DESC";

				ResultSet rs = dms.DMSApp.getApplication().getDBConnection().getResultSet(sql);

				DefaultTableModel aModel = (DefaultTableModel) jTable5.getModel();
				AccountingUtil.clearTableModel(aModel);
				/*
				 if (aModel.getRowCount() > 0) {
				 for (int i = aModel.getRowCount(); i > 0; i--) {
				 aModel.removeRow(i - 1);
				 }
				 }
				 */
				ResultSetMetaData rsmd = rs.getMetaData();
				int colNo = rsmd.getColumnCount();
				while (rs.next()) {
					Object[] values = new Object[colNo];
					for (int i = 0; i < colNo; i++) {
						if (i == 5) {
							values[i] = AccountingUtil.dateFormat1.format(rs.getObject(i + 1));
						} else {
							values[i] = rs.getObject(i + 1);
						}
					}
					aModel.addRow(values);
				}
				rs.getStatement().close();
			} catch (Exception e) {
				dms.DMSApp.displayMessage(this, e.getLocalizedMessage(), dms.DMSApp.ERROR_MESSAGE);
			}
		}
        }//GEN-LAST:event_jButton22chartOfAccountsClicked

        private void journalSearchTextField3KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_journalSearchTextField3KeyReleased
		if (evt.getKeyCode() == 10) {
			journalSearchButton3MouseClicked(null);
		}
        }//GEN-LAST:event_journalSearchTextField3KeyReleased

        private void journalSearchButton3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_journalSearchButton3MouseClicked
		try {
			String sql = "";

			String searchFilter = "";
			String journalSearch = journalSearchTextField3.getText();
			int journalSearchInt = 0;

			if (dms.util.StringUtil.isInteger(journalSearch)) {
				journalSearchInt = Integer.parseInt(journalSearch);

				searchFilter = "A.AccountNumber LIKE '%" + journalSearchInt + "%' "
					+ "OR A.ControlNumber LIKE '%" + journalSearchInt + "%' "
					+ "OR A.ReferenceNumber LIKE '%" + journalSearchInt + "%' "
					+ "OR A.Memo LIKE '%" + journalSearchInt + "%' ";
			} else if (!dms.util.StringUtil.isInteger(journalSearch)) {
				searchFilter = "A.Memo LIKE '%" + journalSearch + "%' "
					+ "OR A.ControlNumber LIKE '%" + journalSearch + "%' "
					+ "OR A.ReferenceNumber LIKE '%" + journalSearch + "%' ";
			}

			sql = "SELECT "
				+ "CAST(A.AccountNumber AS VARCHAR) +' - '+ B.Description,CAST(ROUND(Debit,2) AS NUMERIC(10,2)),"
				+ "CAST(ROUND(Credit,2) AS NUMERIC(10,2)),ControlNumber,ReferenceNumber,PostDate, GLType, Memo"
				+ " FROM AccountingGLTable A "
				+ " LEFT JOIN AccountingCOATable B "
				+ " ON (A.AccountNumber = B.AccountNumber) "
				+ "WHERE "
				+ searchFilter
				+ "AND A.LotName = '" + dms.DMSApp.getApplication().getCurrentlotName() + "' "
				+ "ORDER BY PostDate DESC";

			//System.out.println("sql2 " + sql);

			ResultSet rs;
			rs = dms.DMSApp.getApplication().getDBConnection().getResultSet(sql);

			DefaultTableModel aModel = (DefaultTableModel) jTable5.getModel();
			AccountingUtil.clearTableModel(aModel);

			ResultSetMetaData rsmd = rs.getMetaData();
			int colNo = rsmd.getColumnCount();
			while (rs.next()) {
				Object[] values = new Object[colNo];
				for (int i = 0; i < colNo; i++) {
					if (i == 5) {
						values[i] = AccountingUtil.dateFormat1.format(rs.getObject(i + 1));
					} else {
						values[i] = rs.getObject(i + 1);
					}
				}
				aModel.addRow(values);
			}
			rs.getStatement().close();

		} catch (Exception e) {
		}
        }//GEN-LAST:event_journalSearchButton3MouseClicked

        private void jPanel65COAVisible(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jPanel65COAVisible
		/*
		 if (runOnce1) {
		 runOnce1 = false;
		 Calendar c = Calendar.getInstance();
		 if (jDateChooser9.getDate() == null) {
		 jDateChooser9.setDate(c.getTime());
		 }
		 if (jDateChooser7.getDate() == null) {
		 c.add(Calendar.DATE, 1 - c.get(Calendar.DATE));
		 jDateChooser7.setDate(c.getTime());
		 }

			
		 }		
		 */
        }//GEN-LAST:event_jPanel65COAVisible

        private void coaPopupOkButtoncoaPopupButtonsClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_coaPopupOkButtoncoaPopupButtonsClicked
		if (evt.getClickCount() >= 1) {
			if ((JButton) evt.getSource() == coaPopupOkButton) {
				if (((Number) coaAccountField.getValue()).intValue() < 0) {
					coaAccountField.setValue(Math.abs(((Number) coaAccountField.getValue()).intValue()));
					dms.DMSApp.displayMessage(coaPopup, "Can not have negative account numbers.", JOptionPane.WARNING_MESSAGE);
					return;
				}

				if (coaModal == 1) {
					AccountingUtil.addAccount(((Number) coaAccountField.getValue()).intValue(), jTextField2.getText(), "" + coaTypeField.getSelectedItem(), coaPopup);
					reloadCOA2();
					reloadBankAccounts();
					coaPopup.dispose();
				} else if (coaModal == 2) {
					AccountingUtil.editAccount(((Number) uICTable6.getValueAt(uICTable6.getSelectedRow(), uICTable6.getColumnModel().getColumnIndex("Account"))).intValue(), ((Number) coaAccountField.getValue()).intValue(), jTextField2.getText(), "" + coaTypeField.getSelectedItem(), isControlled.isSelected(), series.getText(), coaPopup);
					reloadCOA2();
					reloadBankAccounts();
					coaPopup.dispose();
				}
			} else if ((JButton) evt.getSource() == coaPopupCancelButton) {
				coaPopup.dispose();
			}
		}
        }//GEN-LAST:event_coaPopupOkButtoncoaPopupButtonsClicked

        private void coaPopupCancelButtoncoaPopupButtonsClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_coaPopupCancelButtoncoaPopupButtonsClicked
		if (evt.getClickCount() >= 1) {
			if ((JButton) evt.getSource() == coaPopupOkButton) {
				if (((Number) coaAccountField.getValue()).intValue() < 0) {
					coaAccountField.setValue(Math.abs(((Number) coaAccountField.getValue()).intValue()));
					dms.DMSApp.displayMessage(coaPopup, "Can not have negative account numbers.", JOptionPane.WARNING_MESSAGE);
					return;
				}

				if (coaModal == 1) {
					AccountingUtil.addAccount(((Number) coaAccountField.getValue()).intValue(), jTextField2.getText(), "" + coaTypeField.getSelectedItem(), coaPopup);
					reloadCOA2();
					reloadBankAccounts();
					coaPopup.dispose();
				} else if (coaModal == 2) {
					AccountingUtil.editAccount(((Number) uICTable6.getValueAt(uICTable6.getSelectedRow(), uICTable6.getColumnModel().getColumnIndex("Account"))).intValue(), ((Number) coaAccountField.getValue()).intValue(), jTextField2.getText(), "" + coaTypeField.getSelectedItem(), isControlled.isSelected(), series.getText(), coaPopup);
					reloadCOA2();
					reloadBankAccounts();
					coaPopup.dispose();
				}
			} else if ((JButton) evt.getSource() == coaPopupCancelButton) {
				coaPopup.dispose();
			}
		}
        }//GEN-LAST:event_coaPopupCancelButtoncoaPopupButtonsClicked

        private void jTextField2coaPopupDescTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField2coaPopupDescTyped
		/*
		 JTextField jt = (JTextField)evt.getSource();
		 int cp = jt.getCaretPosition();

		 if(jt.getText().length() == 1)
		 jt.setText(jt.getText().toUpperCase().replace("-", " "));
		 else if(jt.getText().length() > 1)
		 jt.setText(jt.getText().substring(0, 1).toUpperCase().replace("-", " ") + jt.getText().substring(1).toLowerCase().replace("-", " "));

		 jt.setCaretPosition(cp);

		 if(jt.getText().length() > jt.getColumns())
		 {
		 jt.setText(jt.getText().substring(0, jt.getColumns()));
		 jt.setCaretPosition(jt.getText().length());
		 }
		 */
        }//GEN-LAST:event_jTextField2coaPopupDescTyped

        private void jCheckBox8MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jCheckBox8MouseClicked
		AccountingUtil.dateFilter(jPanel153, jCheckBox8);
		uICTable6chartOfAccountsClicked(null);
        }//GEN-LAST:event_jCheckBox8MouseClicked

        private void seriescoaPopupDescTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_seriescoaPopupDescTyped
                // TODO add your handling code here:
        }//GEN-LAST:event_seriescoaPopupDescTyped

        private void jButton14coaEditButtonsClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton14coaEditButtonsClicked
		reloadCOA2();
        }//GEN-LAST:event_jButton14coaEditButtonsClicked

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JFormattedTextField coaAccountField;
    private javax.swing.JDialog coaPopup;
    private javax.swing.JButton coaPopupCancelButton;
    private javax.swing.JButton coaPopupOkButton;
    private javax.swing.JComboBox coaTypeField;
    private javax.swing.Box.Filler filler5;
    private javax.swing.Box.Filler filler6;
    private javax.swing.Box.Filler filler7;
    private javax.swing.Box.Filler filler9;
    private javax.swing.JCheckBox isControlled;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton22;
    private javax.swing.JCheckBox jCheckBox8;
    private com.toedter.calendar.JDateChooser jDateChooser7;
    private com.toedter.calendar.JDateChooser jDateChooser9;
    private javax.swing.JLabel jLabel101;
    private javax.swing.JLabel jLabel105;
    private javax.swing.JLabel jLabel107;
    private javax.swing.JLabel jLabel110;
    private javax.swing.JLabel jLabel111;
    private javax.swing.JLabel jLabel112;
    private javax.swing.JLabel jLabel86;
    private javax.swing.JPanel jPanel100;
    private javax.swing.JPanel jPanel101;
    private javax.swing.JPanel jPanel102;
    private javax.swing.JPanel jPanel103;
    private javax.swing.JPanel jPanel107;
    private javax.swing.JPanel jPanel153;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel65;
    private javax.swing.JPanel jPanel70;
    private javax.swing.JPanel jPanel71;
    private javax.swing.JPanel jPanel95;
    private javax.swing.JPanel jPanel97;
    private javax.swing.JPanel jPanel99;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane21;
    private javax.swing.JTable jTable5;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JButton journalSearchButton3;
    private javax.swing.JTextField journalSearchTextField3;
    private javax.swing.JTextField series;
    public static uic.widgets.UICTable uICTable6;
    // End of variables declaration//GEN-END:variables
	private JFrame mainFrame;
	Dimension coaPopupSize = new Dimension(480, 140);
	private int coaModal = 0;
	private String[] sql = null;

	public static void reloadCOA2() {
		try {

			String sql = "SELECT [AccountNumber], [Description], [Type], [isControlled], Series,  "
				+ "(SELECT CASE WHEN SUM(Debit+Credit) IS NULL THEN 0.00 ELSE "
				+ "CAST(ROUND(SUM(Debit+Credit),2) AS NUMERIC(12,2)) END "
				+ "FROM AccountingGLTable B WHERE B.AccountNumber = A.AccountNumber) AS Balance "
				+ "FROM AccountingCOATable A "
				+ "WHERE LotName = '" + dms.DMSApp.getApplication().getCurrentlotName() + "' "
				+ "ORDER BY Series, [AccountNumber] ASC";

			//System.out.println(sql);

			int balanceColumn = AccountingUtil.getColumnByName(uICTable6, "Balance");

			ResultSet rs = dms.DMSApp.getApplication().getDBConnection().getResultSet(sql);

			DefaultTableModel aModel = (DefaultTableModel) uICTable6.getModel();
			AccountingUtil.clearTableModel(aModel);

			ResultSetMetaData rsmd = rs.getMetaData();
			int colNo = rsmd.getColumnCount();
			
			toolsPanel.mapGLCombo.removeAllItems();
			toolsPanel.mapGLCombo.addItem("");
			
			while (rs.next()) {
				// add gl acconts tools map
				toolsPanel.mapGLCombo.addItem(rs.getString("AccountNumber") +" - "+ rs.getString("Description"));
				
				Object[] values = new Object[colNo];
				for (int i = 0; i < colNo; i++) {
					if (i == balanceColumn) {
						values[i] = rs.getString("Balance").toString();
					} else {
						values[i] = rs.getObject(i + 1);
					}
				}                                
				aModel.addRow(values);                                
                                Dimension dim = new Dimension(350, uICTable6.getRowCount() * uICTable6.getRowHeight());                                
                                uICTable6.setPreferredSize(dim);
			}
			rs.getStatement().close();                                                                        
                
		} catch (SQLException ex) {
			Logger.getLogger(COAPanel.class.getName()).log(Level.SEVERE, null, ex);
		}
	}                                               

	public static void reloadBankAccounts() {
		String[] accounts = AccountingUtil.getBankAccountsNumberAndDesc();
		if (accounts != null) {
			accountsPayablePanel.paybillsBankCombo.removeAllItems();
			accountsPayablePanel.paybillsBankCombo.addItem("");
			BankingPanel.depositsBankCombo.removeAllItems();
			BankingPanel.depositsBankCombo.addItem("");
			BankingPanel.checkbookBankCombo.removeAllItems();
			BankingPanel.checkbookBankCombo.addItem("");

			for (int j = 0; j < accounts.length; j++) {
				accountsPayablePanel.paybillsBankCombo.addItem(accounts[j]);
				BankingPanel.depositsBankCombo.addItem(accounts[j]);
				BankingPanel.checkbookBankCombo.addItem(accounts[j]);
			}
		}
	}
}
